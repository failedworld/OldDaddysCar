{"version":3,"sources":["assets\\Script\\ObstacleControl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAoC;AACpC,uCAAkC;AAClC,iDAA4C;AAEtC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA6C,mCAAY;IAAzD;QAAA,qEAsCC;QAnCG,eAAS,GAAW,CAAC,CAAC;QAGtB,YAAM,GAAc,IAAI,CAAC;;QA6BzB,gBAAgB;QAEhB,IAAI;IACR,CAAC;IA9BG,wBAAwB;IAExB,eAAe;IAEf,+BAAK,GAAL;QACI,IAAI,IAAI,GAAG,IAAI,CAAA;QACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QAC9C,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAA;IAC7C,CAAC;IAED,qCAAW,GAAX;QACI,IAAI,mBAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,UAAU,EAAC;YAChD,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAA;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;SACpC;aAAI;YACD,8CAA8C;YAC9C,IAAI,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YACrC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAA;YACrC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,EAAE,CAAA;YACjC,GAAG,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACzC,uBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;SACrC;IAGL,CAAC;IA9BD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;sDACC;IAGtB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;mDACK;IANR,eAAe;QADnC,OAAO;OACa,eAAe,CAsCnC;IAAD,sBAAC;CAtCD,AAsCC,CAtC4C,EAAE,CAAC,SAAS,GAsCxD;kBAtCoB,eAAe","file":"","sourceRoot":"/","sourcesContent":["import GameState from \"./GameState\";\r\nimport Obstacle from \"./Obstacle\";\r\nimport ObstaclesPool from \"./ObstaclesPool\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ObstacleControl extends cc.Component {\r\n\r\n    @property(cc.Integer)\r\n    deltaTime: number = 2;\r\n\r\n    @property(cc.Prefab)\r\n    obsPre: cc.Prefab = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n        let self = this\r\n        this.schedule(this.generateObs,self.deltaTime) \r\n        console.log('========scheduled=========')\r\n    }\r\n\r\n    generateObs(){\r\n        if (GameState.instance.getGameState() == 'GameOver'){\r\n            console.log('========unscheduled=========')\r\n            this.unschedule(this.generateObs)\r\n        }else{\r\n            // console.log('========unscheduled=========')\r\n            let obs = cc.instantiate(this.obsPre)\r\n            obs.setParent(cc.director.getScene())\r\n            obs.y = this.node.y;\r\n            obs.x = Math.random() * 1080 + 20\r\n            obs.getComponent(Obstacle).setSpeed(1600)\r\n            ObstaclesPool.instance.addObs(obs)\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    // update (dt) {\r\n\r\n    // }\r\n}\r\n"]}