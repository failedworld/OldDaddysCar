{"version":3,"sources":["assets/Script/GameLogic.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,yCAAoC;AAE9B,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAuC,6BAAY;IAAnD;QAAA,qEAoDC;QAlDG,gBAAU,GAAG,KAAK,CAAA;QAGlB,mBAAa,GAAW,IAAI,CAAA;;QA8C5B,iBAAiB;IACrB,CAAC;IA7CG,0BAAM,GAAN;QACI,SAAS;QACT,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAA;IAErC,CAAC;IAED,yBAAK,GAAL;IAIA,CAAC;IAED,4BAAQ,GAAR;QACI,OAAO;QACR,mBAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;QAC3C,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAA;QAChC,IAAI,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAA;QAEhF,IAAI,QAAQ,GAAG,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;QAC1D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAA;QAC/C,QAAQ,CAAC,MAAM,GAAG,QAAQ,GAAG,mBAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;QAC7D,sDAAsD;QAEnD,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAA;IAClD,CAAC;IAEM,6BAAS,GAAhB;QACI,mBAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;QAC7B,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAA;QACjC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IACjC,CAAC;IAEM,8BAAU,GAAjB;QACI,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAA;QACrC,mBAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;QAC7B,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,CAAA;QACjC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;IAClC,CAAC;IAEM,6BAAS,GAAhB;QACI,oCAAoC;QACpC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IACjC,CAAC;IA5CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;oDACU;IALX,SAAS;QAD7B,OAAO;OACa,SAAS,CAoD7B;IAAD,gBAAC;CApDD,AAoDC,CApDsC,EAAE,CAAC,SAAS,GAoDlD;kBApDoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameState from \"./GameState\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameLogic extends cc.Component {\n\n    isGameOver = false\n\n    @property(cc.Node)\n    gameoverPanel:cc.Node = null\n\n    onLoad(){\n        // 结束面板隐藏\n        this.gameoverPanel.active = false\n\n    }\n \n    start () {\n\n        \n\n    }\n\n    gameOver(){\n        // 游戏结束\n       GameState.instance.setGameState('GameOver')\n       this.gameoverPanel.active = true\n       let gameOverScoreLblNode = this.gameoverPanel.getChildByName('GameOverScoreLbl')\n    \n       let scorelbl = gameOverScoreLblNode.getComponent(cc.Label)\n       console.log('score ======= ' + scorelbl.string)\n       scorelbl.string = 'Score:' + GameState.instance.getScore()\n    //    .string = 'Score:' + GameState.instance.getScore\n\n       console.log('=========game over =============')\n    }\n\n    public gameReset(){\n        GameState.instance.resetAll()\n        this.gameoverPanel.active = false\n        cc.director.loadScene('Game')\n    }\n\n    public gameGiveup(){\n        console.log('Game Over===== give up')\n        GameState.instance.resetAll()\n        this.gameoverPanel.active = false\n        cc.director.loadScene('Login')\n    }\n\n    public gameStart(){\n        // this.gameoverPanel.active = false\n        cc.director.loadScene('Game')\n    }\n\n    // update (dt) {}\n}\n"]}